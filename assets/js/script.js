// DOM element variables
const passwordEl = document.querySelector('#password');
const lengthEl = document.querySelector('#length');
const uppercaseEl = document.querySelector('#uppercase');
const lowercaseEl = document.querySelector('#lowercase');
const numbersEl = document.querySelector('#numbers');
const specialCharactersEl = document.querySelector('#special-characters');
const generateEl = document.querySelector('#generate');
const cardHeaderEl = document.querySelector('.card-header');


//Function to fetch a random value of each
const randomFunc = {
	lower: getRandomLower,
	upper: getRandomUpper,
	number: getRandomNumber,
	specialCharacter: getRandomSpecialCharacter
}

//When generate btn is clicked, the password will contain checked values
generateEl.addEventListener('click', () => {
    const length = +lengthEl.value;
    //The + makes the length a number rather than a string
	const hasLower = lowercaseEl.checked;
	const hasUpper = uppercaseEl.checked;
	const hasNumber = numbersEl.checked;
	const hasSpecialCharacter = specialCharactersEl.checked;
	
	passwordEl.innerText = generatePassword(hasLower, hasUpper, hasNumber, hasSpecialCharacter, length);
});

//Generate password function
function generatePassword(lower, upper, number, specialCharacter, length){
    //Initializes password variable
    let generatedPassword = '';

    const checkCount = lower + upper + number + specialCharacter;

    //Filter out unchecked types
    const checkArr = [{lower}, {upper}, {number}, {specialCharacter}].filter(item => Object.values(item)[0]);
    
    if(checkCount === 0) {
        return '';
    }

    if (length < 8 || length > 128){
        // cardHeaderEL.classList.add('error');
        cardHeaderEL.innerHTML = '<h4>Please have a length between 8-128</h4>';

        setTimeout(() => msg.remove(), 3000);
} else {

//Loop over length and call a generator function for each type
    for(let i = 0; i < length; i += checkCount) {
        checkArr.forEach(check => {
            const funcName = Object.keys(check)[0];

            generatedPassword += randomFunc[funcName]();
        });
    }

    //Add printed password to the password variable and return
    const printedPassword = generatedPassword;

    return printedPassword;  
}
}

//Fetches a random lowercase letter
function getRandomLower() {
    return String.fromCharCode(Math.floor(Math.random() * 26) +97);
    //A random number (0-1) is fetched and rounded to nearest whole, then multiplied by the number of letters in the alphabet. Then it is added by 97 to align with the browser character set. The browser character set's lowercase numbers span from 97 (a) to 122 (z).
}
//Fetches random uppercase letter
function getRandomUpper() {
    return String.fromCharCode(Math.floor(Math.random() * 26) +65);
    //random number (0-1) is fetched and rounded to nearest whole, then multiplied by 26 (length of alphabet), and finally added by 65 to match with the browser character set's uppercase numbers
}
//Fetches random number
function getRandomNumber() {
    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
    return numbers[Math.floor(Math.random() * numbers.length)];
    //Multiplied random number generated by the length of the numbers string in order to correspond with any possible number listed
}


//Fetches random special character
function getRandomSpecialCharacter() {
    const characters = '!@#$%^&*()=+-,.<>';
    return characters[Math.floor(Math.random() * characters.length)];
    //Multiplied random number generated by the length of the characters string in order to correspond with any possible character listed
}